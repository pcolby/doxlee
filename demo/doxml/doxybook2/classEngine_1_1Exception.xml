<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classEngine_1_1Exception" kind="class" language="C++" prot="public">
    <compoundname>Engine::Exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <includes refid="Exception_8hpp" local="no">Exception.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classEngine_1_1Exception_1ace265added7ec74ac0fe09b30d442621" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Engine::Exception::msg</definition>
        <argsstring></argsstring>
        <name>msg</name>
        <qualifiedname>Engine::Exception::msg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Exception.hpp" line="23" column="21" bodyfile="src/Exception.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classEngine_1_1Exception_1a697748d2c21a434b4742910b8d4e53d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Engine::Exception::Exception</definition>
        <argsstring>()=default</argsstring>
        <name>Exception</name>
        <qualifiedname>Engine::Exception::Exception</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Exception.hpp" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEngine_1_1Exception_1a4f566b63e5d447cb468d0f89b46bb75c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Engine::Exception::Exception</definition>
        <argsstring>(std::string msg)</argsstring>
        <name>Exception</name>
        <qualifiedname>Engine::Exception::Exception</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Exception.hpp" line="13" column="18" bodyfile="src/Exception.hpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classEngine_1_1Exception_1abe04228aaf85271b9d623e9958373e8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Engine::Exception::what</definition>
        <argsstring>() const override</argsstring>
        <name>what</name>
        <qualifiedname>Engine::Exception::what</qualifiedname>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Exception.hpp" line="18" column="20" bodyfile="src/Exception.hpp" bodystart="18" bodyend="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Engine::Exception</label>
        <link refid="classEngine_1_1Exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Engine::Exception</label>
        <link refid="classEngine_1_1Exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="src/Exception.hpp" line="9" column="1" bodyfile="src/Exception.hpp" bodystart="9" bodyend="24"/>
    <listofallmembers>
      <member refid="classEngine_1_1Exception_1a697748d2c21a434b4742910b8d4e53d4" prot="public" virt="non-virtual"><scope>Engine::Exception</scope><name>Exception</name></member>
      <member refid="classEngine_1_1Exception_1a4f566b63e5d447cb468d0f89b46bb75c" prot="public" virt="non-virtual"><scope>Engine::Exception</scope><name>Exception</name></member>
      <member refid="classEngine_1_1Exception_1ace265added7ec74ac0fe09b30d442621" prot="private" virt="non-virtual"><scope>Engine::Exception</scope><name>msg</name></member>
      <member refid="classEngine_1_1Exception_1abe04228aaf85271b9d623e9958373e8f" prot="public" virt="non-virtual"><scope>Engine::Exception</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
